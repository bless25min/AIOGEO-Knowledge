name: 🛡️ Safe GitHub API Static Deployment

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy-via-api:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm init -y
        npm install @octokit/rest markdown-it cheerio fs-extra
        
    - name: Create GitHub API deployment script
      run: |
        cat > deploy-via-api.js << 'EOF'
        const { Octokit } = require('@octokit/rest');
        const fs = require('fs-extra');
        const path = require('path');
        const MarkdownIt = require('markdown-it');
        const md = new MarkdownIt({ html: true });

        const octokit = new Octokit({
          auth: process.env.GITHUB_TOKEN
        });

        const owner = 'bless25min';
        const repo = 'AIOGEO-Knowledge';

        // HTML 模板生成函數
        function generateHTMLTemplate(title, description, content, canonical) {
          return `<!DOCTYPE html>
        <html lang="zh-TW">
        <head>
          <meta charset="UTF-8">
          <title>${title} | AIOGEO 知識庫</title>
          <meta name="description" content="${description}">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="canonical" href="${canonical}">
          
          <!-- Schema.org 標記 -->
          <script type="application/ld+json">
          {
            "@context": "https://schema.org",
            "@type": "Article",
            "headline": "${title}",
            "description": "${description}",
            "author": {
              "@type": "Person",
              "name": "廖天佑 Bless Liao"
            },
            "datePublished": "${new Date().toISOString()}",
            "mainEntityOfPage": "${canonical}"
          }
          </script>
          
          <style>
            body {
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
              line-height: 1.7;
              max-width: 900px;
              margin: 0 auto;
              padding: 20px;
              color: #1f2937;
              background: #f8fafc;
            }
            .container {
              background: white;
              padding: 40px;
              border-radius: 12px;
              box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            }
            h1 { color: #6366f1; border-bottom: 3px solid #6366f1; padding-bottom: 15px; }
            h2 { color: #374151; margin-top: 30px; border-left: 4px solid #6366f1; padding-left: 15px; }
            .summary {
              background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
              border: 2px solid #0ea5e9;
              border-radius: 12px;
              padding: 24px;
              margin: 25px 0;
              font-size: 1.05em;
            }
            .enhanced-link {
              background: #6366f1;
              color: white;
              padding: 12px 24px;
              border-radius: 8px;
              text-decoration: none;
              display: inline-block;
              margin: 10px 5px;
            }
            pre { background: #1e293b; color: #e2e8f0; padding: 20px; border-radius: 8px; overflow-x: auto; }
            table { width: 100%; border-collapse: collapse; margin: 20px 0; }
            th, td { border: 1px solid #e5e7eb; padding: 12px; text-align: left; }
            th { background: #f9fafb; font-weight: 600; }
          </style>
        </head>
        <body>
          <div class="container">
            ${content}
            <footer style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
              <a href="https://bless25min.github.io/AIOGEO-Knowledge/" class="enhanced-link">🏠 返回知識庫</a>
              <p style="color: #6b7280; margin-top: 15px;">📚 AIOGEO 知識庫 | 🎯 讓AI看見你的內容</p>
            </footer>
          </div>
        </body>
        </html>`;
        }

        // 讀取並轉換 Markdown 檔案
        function processMarkdownFile(filePath) {
          try {
            if (fs.existsSync(filePath)) {
              const content = fs.readFileSync(filePath, 'utf8');
              const cleanContent = content.replace(/^---[\s\S]*?---\n/, '');
              return md.render(cleanContent);
            }
            return '<p>內容載入中...</p>';
          } catch (error) {
            console.log(`Warning: ${filePath} not found`);
            return '<p>內容載入中...</p>';
          }
        }

        // 通過 GitHub API 創建或更新檔案
        async function createOrUpdateFile(path, content, message) {
          try {
            // 先嘗試獲取現有檔案
            let sha;
            try {
              const { data } = await octokit.rest.repos.getContent({
                owner,
                repo,
                path
              });
              sha = data.sha;
            } catch (error) {
              // 檔案不存在，將創建新檔案
              console.log(`Creating new file: ${path}`);
            }

            // 創建或更新檔案
            await octokit.rest.repos.createOrUpdateFileContents({
              owner,
              repo,
              path,
              message,
              content: Buffer.from(content).toString('base64'),
              sha
            });

            console.log(`✅ ${path} updated successfully`);
          } catch (error) {
            console.error(`❌ Failed to update ${path}:`, error.message);
          }
        }

        // 主要頁面配置
        const pages = [
          {
            mdFile: 'posts/geo-fundamentals.md',
            htmlFile: 'geo-fundamentals.html',
            title: 'GEO基礎原理完整指南：AI搜尋時代的內容優化策略',
            description: '深入解析 GEO (生成式引擎優化) 基礎原理，提供AI搜尋時代的內容優化策略與實戰技巧。'
          },
          {
            mdFile: 'posts/seo-geo-integration.md',
            htmlFile: 'seo-geo-integration.html',
            title: 'SEO×GEO雙軌整合實戰指南',
            description: 'SEO與GEO雙軌優化策略，整合傳統搜尋引擎優化與AI引用優化的完整實施框架。'
          },
          {
            mdFile: 'posts/semantic-mesh.md',
            htmlFile: 'semantic-mesh.html',
            title: 'Semantic Mesh語意矩陣：建立智慧內容網絡',
            description: 'Semantic Mesh架構設計完整指南，建立主幹頁、子主題頁、微型頁三層內容網絡。'
          },
          {
            mdFile: 'tools/checklists.md',
            htmlFile: 'tools-checklists.html',
            title: 'GEO優化檢查清單',
            description: '完整的GEO優化檢查清單，提供逐項對照的優化要點和品質標準。'
          }
        ];

        // 生成完整的靜態頁面
        async function deployStaticPages() {
          console.log('🚀 開始通過 GitHub API 部署靜態頁面...');

          // 處理主要頁面
          for (const page of pages) {
            const content = processMarkdownFile(page.mdFile);
            const canonical = `https://bless25min.github.io/AIOGEO-Knowledge/${page.htmlFile}`;
            const html = generateHTMLTemplate(page.title, page.description, content, canonical);
            
            await createOrUpdateFile(
              page.htmlFile,
              html,
              `📄 更新靜態頁面: ${page.title}`
            );
          }

          // 更新 sitemap.xml
          const sitemap = `<?xml version="1.0" encoding="UTF-8"?>
        <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
            <url>
                <loc>https://bless25min.github.io/AIOGEO-Knowledge/</loc>
                <lastmod>${new Date().toISOString().split('T')[0]}</lastmod>
                <changefreq>weekly</changefreq>
                <priority>1.0</priority>
            </url>
            <url>
                <loc>https://bless25min.github.io/AIOGEO-Knowledge/geo-fundamentals.html</loc>
                <lastmod>${new Date().toISOString().split('T')[0]}</lastmod>
                <changefreq>weekly</changefreq>
                <priority>0.95</priority>
            </url>
            <url>
                <loc>https://bless25min.github.io/AIOGEO-Knowledge/seo-geo-integration.html</loc>
                <lastmod>${new Date().toISOString().split('T')[0]}</lastmod>
                <changefreq>weekly</changefreq>
                <priority>0.9</priority>
            </url>
            <url>
                <loc>https://bless25min.github.io/AIOGEO-Knowledge/semantic-mesh.html</loc>
                <lastmod>${new Date().toISOString().split('T')[0]}</lastmod>
                <changefreq>weekly</changefreq>
                <priority>0.85</priority>
            </url>
            <url>
                <loc>https://bless25min.github.io/AIOGEO-Knowledge/tools-checklists.html</loc>
                <lastmod>${new Date().toISOString().split('T')[0]}</lastmod>
                <changefreq>weekly</changefreq>
                <priority>0.8</priority>
            </url>
        </urlset>`;

          await createOrUpdateFile(
            'sitemap.xml',
            sitemap,
            '🗺️ 更新 Sitemap 包含靜態頁面'
          );

          console.log('🎉 靜態頁面部署完成！');
        }

        // 執行部署
        deployStaticPages().catch(console.error);
        EOF
        
    - name: Deploy static pages via GitHub API
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        node deploy-via-api.js
